# git-cliff configuration for Notary
# https://git-cliff.org/docs/configuration

[changelog]
# Changelog header
header = """
# Changelog

All notable changes to Notary will be documented in this file.

"""

# Template for the changelog body
body = """
{% if version %}\
    {% if previous.version %}\
        ## [{{ version | trim_start_matches(pat="v") }}](https://github.com/tuist/notary/compare/{{ previous.version }}..{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
    {% else %}\
        ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
    {% endif %}\
{% else %}\
    ## [Unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        - {% if commit.scope %}**{{ commit.scope }}**: {% endif %}{{ commit.message | upper_first }}\
        {% if commit.breaking %} **BREAKING**{% endif %}\
        {% if commit.github.username %} by @{{ commit.github.username }}{% endif %}\
        {% if commit.github.pr_number %} in [#{{ commit.github.pr_number }}](https://github.com/tuist/notary/pull/{{ commit.github.pr_number }}){% endif %}
    {% endfor %}
    {% for commit in commits %}
        {% if not commit.scope %}\
            - {{ commit.message | upper_first }}\
            {% if commit.breaking %} **BREAKING**{% endif %}\
            {% if commit.github.username %} by @{{ commit.github.username }}{% endif %}\
            {% if commit.github.pr_number %} in [#{{ commit.github.pr_number }}](https://github.com/tuist/notary/pull/{{ commit.github.pr_number }}){% endif %}
        {% endif %}
    {% endfor %}
{% endfor %}

{% if github.contributors | filter(attribute="is_first_time", value=true) | length != 0 %}
### New Contributors
{% for contributor in github.contributors | filter(attribute="is_first_time", value=true) %}
- @{{ contributor.username }} made their first contribution
  {%- if contributor.pr_number %} in [#{{ contributor.pr_number }}](https://github.com/tuist/notary/pull/{{ contributor.pr_number }}){% endif %}
{% endfor %}
{% endif %}
"""

# Changelog footer
footer = """
---
Generated by [git-cliff](https://github.com/orhun/git-cliff).
"""

# Remove the leading and trailing whitespace
trim = true

[git]
# Parse conventional commits
conventional_commits = true

# Filter out commits that match regex
filter_unconventional = true

# Process each line of commit message for conventional commits
split_commits = false

# Regex for preprocessing the commit messages
commit_preprocessors = [
    { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](https://github.com/tuist/notary/pull/${2}))" },
]

# Regex for parsing commit messages
commit_parsers = [
    { message = "^feat", group = "⚡ Features" },
    { message = "^fix", group = "🐛 Bug Fixes" },
    { message = "^doc", group = "📚 Documentation" },
    { message = "^perf", group = "🚀 Performance" },
    { message = "^refactor", group = "♻️  Refactoring" },
    { message = "^style", group = "🎨 Style" },
    { message = "^test", group = "🧪 Testing" },
    { message = "^ci", group = "👷 CI/CD" },
    { message = "^chore\\(release\\)", skip = true },
    { message = "^chore\\(deps\\)", group = "📦 Dependencies" },
    { message = "^chore", group = "🔧 Miscellaneous" },
    { message = "^build", group = "🏗️  Build System" },
]

# Protect breaking changes
protect_breaking_commits = false

# Filter commits by paths
filter_commits = false

# Sort commits chronologically
date_order = false

# Sort commits by oldest to newest
sort_commits = "oldest"

# Limit the number of commits
limit_commits = 1000

[remote.github]
owner = "tuist"
repo = "notary"